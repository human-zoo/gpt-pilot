"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebAclAssociation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Creates a WAFv2 Web ACL Association.
 *
 * > **NOTE on associating a WAFv2 Web ACL with a Cloudfront distribution:** Do not use this resource to associate a WAFv2 Web ACL with a Cloudfront Distribution. The [AWS API call backing this resource](https://docs.aws.amazon.com/waf/latest/APIReference/API_AssociateWebACL.html) notes that you should use the `webAclId` property on the `cloudfrontDistribution` instead.
 *
 * [1]: https://docs.aws.amazon.com/waf/latest/APIReference/API_AssociateWebACL.html
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as std from "@pulumi/std";
 *
 * const example = new aws.apigateway.RestApi("example", {
 *     body: JSON.stringify({
 *         openapi: "3.0.1",
 *         info: {
 *             title: "example",
 *             version: "1.0",
 *         },
 *         paths: {
 *             "/path1": {
 *                 get: {
 *                     "x-amazon-apigateway-integration": {
 *                         httpMethod: "GET",
 *                         payloadFormatVersion: "1.0",
 *                         type: "HTTP_PROXY",
 *                         uri: "https://ip-ranges.amazonaws.com/ip-ranges.json",
 *                     },
 *                 },
 *             },
 *         },
 *     }),
 *     name: "example",
 * });
 * const exampleDeployment = new aws.apigateway.Deployment("example", {
 *     restApi: example.id,
 *     triggers: {
 *         redeployment: std.sha1Output({
 *             input: pulumi.jsonStringify(example.body),
 *         }).apply(invoke => invoke.result),
 *     },
 * });
 * const exampleStage = new aws.apigateway.Stage("example", {
 *     deployment: exampleDeployment.id,
 *     restApi: example.id,
 *     stageName: "example",
 * });
 * const exampleWebAcl = new aws.wafv2.WebAcl("example", {
 *     name: "web-acl-association-example",
 *     scope: "REGIONAL",
 *     defaultAction: {
 *         allow: {},
 *     },
 *     visibilityConfig: {
 *         cloudwatchMetricsEnabled: false,
 *         metricName: "friendly-metric-name",
 *         sampledRequestsEnabled: false,
 *     },
 * });
 * const exampleWebAclAssociation = new aws.wafv2.WebAclAssociation("example", {
 *     resourceArn: exampleStage.arn,
 *     webAclArn: exampleWebAcl.arn,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Using `pulumi import`, import WAFv2 Web ACL Association using `WEB_ACL_ARN,RESOURCE_ARN`. For example:
 *
 * ```sh
 * $ pulumi import aws:wafv2/webAclAssociation:WebAclAssociation example arn:aws:wafv2:...7ce849ea,arn:aws:apigateway:...ages/name
 * ```
 */
class WebAclAssociation extends pulumi.CustomResource {
    /**
     * Get an existing WebAclAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new WebAclAssociation(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of WebAclAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebAclAssociation.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["resourceArn"] = state ? state.resourceArn : undefined;
            resourceInputs["webAclArn"] = state ? state.webAclArn : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.resourceArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceArn'");
            }
            if ((!args || args.webAclArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'webAclArn'");
            }
            resourceInputs["resourceArn"] = args ? args.resourceArn : undefined;
            resourceInputs["webAclArn"] = args ? args.webAclArn : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WebAclAssociation.__pulumiType, name, resourceInputs, opts);
    }
}
exports.WebAclAssociation = WebAclAssociation;
/** @internal */
WebAclAssociation.__pulumiType = 'aws:wafv2/webAclAssociation:WebAclAssociation';
//# sourceMappingURL=webAclAssociation.js.map