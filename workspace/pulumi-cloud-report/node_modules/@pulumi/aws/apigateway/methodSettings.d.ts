import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import { RestApi } from "./index";
/**
 * Manages API Gateway Stage Method Settings. For example, CloudWatch logging and metrics.
 *
 * > **NOTE:** We recommend using this resource in conjunction with the `aws.apigateway.Stage` resource instead of a stage managed by the `aws.apigateway.Deployment` resource optional `stageName` argument. Stages managed by the `aws.apigateway.Deployment` resource are recreated on redeployment and this resource will require a second apply to recreate the method settings.
 *
 * ## Example Usage
 *
 * ### End-to-end
 *
 * ### Basic Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 * import * as std from "@pulumi/std";
 *
 * const example = new aws.apigateway.RestApi("example", {
 *     body: JSON.stringify({
 *         openapi: "3.0.1",
 *         info: {
 *             title: "example",
 *             version: "1.0",
 *         },
 *         paths: {
 *             "/path1": {
 *                 get: {
 *                     "x-amazon-apigateway-integration": {
 *                         httpMethod: "GET",
 *                         payloadFormatVersion: "1.0",
 *                         type: "HTTP_PROXY",
 *                         uri: "https://ip-ranges.amazonaws.com/ip-ranges.json",
 *                     },
 *                 },
 *             },
 *         },
 *     }),
 *     name: "example",
 * });
 * const exampleDeployment = new aws.apigateway.Deployment("example", {
 *     restApi: example.id,
 *     triggers: {
 *         redeployment: std.sha1Output({
 *             input: pulumi.jsonStringify(example.body),
 *         }).apply(invoke => invoke.result),
 *     },
 * });
 * const exampleStage = new aws.apigateway.Stage("example", {
 *     deployment: exampleDeployment.id,
 *     restApi: example.id,
 *     stageName: "example",
 * });
 * const all = new aws.apigateway.MethodSettings("all", {
 *     restApi: example.id,
 *     stageName: exampleStage.stageName,
 *     methodPath: "*&#47;*",
 *     settings: {
 *         metricsEnabled: true,
 *         loggingLevel: "ERROR",
 *     },
 * });
 * const pathSpecific = new aws.apigateway.MethodSettings("path_specific", {
 *     restApi: example.id,
 *     stageName: exampleStage.stageName,
 *     methodPath: "path1/GET",
 *     settings: {
 *         metricsEnabled: true,
 *         loggingLevel: "INFO",
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### CloudWatch Logging and Tracing
 *
 * The AWS Console API Gateway Editor displays multiple options for CloudWatch Logs that don't directly map to the options in the AWS API and Pulumi. These examples show the `settings` blocks that are equivalent to the options the AWS Console gives for CloudWatch Logs.
 *
 * ### Off
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const pathSpecific = new aws.apigateway.MethodSettings("path_specific", {
 *     restApi: example.id,
 *     stageName: exampleAwsApiGatewayStage.stageName,
 *     methodPath: "path1/GET",
 *     settings: {
 *         loggingLevel: "OFF",
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Errors Only
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const pathSpecific = new aws.apigateway.MethodSettings("path_specific", {
 *     restApi: example.id,
 *     stageName: exampleAwsApiGatewayStage.stageName,
 *     methodPath: "path1/GET",
 *     settings: {
 *         loggingLevel: "ERROR",
 *         metricsEnabled: true,
 *         dataTraceEnabled: false,
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Errors and Info Logs
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const pathSpecific = new aws.apigateway.MethodSettings("path_specific", {
 *     restApi: example.id,
 *     stageName: exampleAwsApiGatewayStage.stageName,
 *     methodPath: "path1/GET",
 *     settings: {
 *         loggingLevel: "INFO",
 *         metricsEnabled: true,
 *         dataTraceEnabled: false,
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ### Full Request and Response Logs
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const pathSpecific = new aws.apigateway.MethodSettings("path_specific", {
 *     restApi: example.id,
 *     stageName: exampleAwsApiGatewayStage.stageName,
 *     methodPath: "path1/GET",
 *     settings: {
 *         loggingLevel: "INFO",
 *         metricsEnabled: true,
 *         dataTraceEnabled: true,
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Using `pulumi import`, import `aws_api_gateway_method_settings` using `REST-API-ID/STAGE-NAME/METHOD-PATH`. For example:
 *
 * ```sh
 * $ pulumi import aws:apigateway/methodSettings:MethodSettings example 12345abcde/example/test/GET
 * ```
 */
export declare class MethodSettings extends pulumi.CustomResource {
    /**
     * Get an existing MethodSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MethodSettingsState, opts?: pulumi.CustomResourceOptions): MethodSettings;
    /**
     * Returns true if the given object is an instance of MethodSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MethodSettings;
    /**
     * Method path defined as `{resource_path}/{http_method}` for an individual method override, or `*&#47;*` for overriding all methods in the stage. Ensure to trim any leading forward slashes in the path (e.g., `trimprefix(aws_api_gateway_resource.example.path, "/")`).
     */
    readonly methodPath: pulumi.Output<string>;
    /**
     * ID of the REST API
     */
    readonly restApi: pulumi.Output<string>;
    /**
     * Settings block, see below.
     */
    readonly settings: pulumi.Output<outputs.apigateway.MethodSettingsSettings>;
    /**
     * Name of the stage
     */
    readonly stageName: pulumi.Output<string>;
    /**
     * Create a MethodSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MethodSettingsArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering MethodSettings resources.
 */
export interface MethodSettingsState {
    /**
     * Method path defined as `{resource_path}/{http_method}` for an individual method override, or `*&#47;*` for overriding all methods in the stage. Ensure to trim any leading forward slashes in the path (e.g., `trimprefix(aws_api_gateway_resource.example.path, "/")`).
     */
    methodPath?: pulumi.Input<string>;
    /**
     * ID of the REST API
     */
    restApi?: pulumi.Input<string | RestApi>;
    /**
     * Settings block, see below.
     */
    settings?: pulumi.Input<inputs.apigateway.MethodSettingsSettings>;
    /**
     * Name of the stage
     */
    stageName?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a MethodSettings resource.
 */
export interface MethodSettingsArgs {
    /**
     * Method path defined as `{resource_path}/{http_method}` for an individual method override, or `*&#47;*` for overriding all methods in the stage. Ensure to trim any leading forward slashes in the path (e.g., `trimprefix(aws_api_gateway_resource.example.path, "/")`).
     */
    methodPath: pulumi.Input<string>;
    /**
     * ID of the REST API
     */
    restApi: pulumi.Input<string | RestApi>;
    /**
     * Settings block, see below.
     */
    settings: pulumi.Input<inputs.apigateway.MethodSettingsSettings>;
    /**
     * Name of the stage
     */
    stageName: pulumi.Input<string>;
}
